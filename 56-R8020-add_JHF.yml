---
# https://sc1.checkpoint.com/documents/R81.10/WebAdminGuides/EN/CP_R81.10_Maestro_AdminGuide/Topics-Maestro-AG/Upgrading-Maestro-with-CPUSE.htm?tocpath=Upgrading%20Maestro%20to%20R81.10%7C_____1
# add snapshot R8030SPa06 desc 06-install_JHF
- name: "Step 56 - Install the required Take of the Jumbo Hotfix Accumulator R80.20"
  hosts: sg
  gather_facts: false
  environment:
    BASH_ENV: /etc/profile

  tasks:

    - name: "Timestamp / Start Step 56 - Install the required Take of the Jumbo Hotfix Accumulator"
      include_tasks: ./include/print_datetime.yml
      when: loglevel>=2


### Prepare and clean

    - name: "remove usermode coredumps if exist"
      shell: g_all -a rm /var/log/dump/usermode/*
      changed_when: false
      ignore_errors: true

    - name: "core_dump_verifier -v"
      shell: core_dump_verifier -v
      changed_when: false
      ignore_errors: true
      register: res

    - name: "Debug / coredumps"
      debug: msg="{{ res.stdout_lines }}"
      when: loglevel>=2


### Start installation

# - create snapshots

    - name: "Transfer package"
      block:
        - name: "Create local repo dir"
          file:
            path: "{{ local_repo }}"
            state: directory
            mode: 0777

        - name: "copy hotfix to the smo from file distribution server"
          copy:
            src: "{{ host_repo }}/{{ jhf }}"
            dest: "{{ local_repo }}"
            mode: 0664
      tags: transfer

    # - name: "Set base_package_fn"
    #   set_fact:
    #     base_package_fn: "{{ jhf_R8020[:-4] }}"
        # to avoid mess with tar and tgz

    - name: "import hotfix with cpuse"
      block:
        - name: "Check if already imported"
          shell: >
            set -o pipefail &&
            da_cli package_info package="{{ jhf }}" | grep -c "displayName"
          register: res_exist
          changed_when: false
          ignore_errors: true

        # - name: "Debug / "
        #   debug: msg="{{ res_exist.stdout }}"
        #   when: loglevel>=2

        - name: "Import if not exists"
          block:
            - name: "Import"
              shell: >
                set -o pipefail &&
                da_cli import package="{{ jhf }}" location="{{ local_repo }}"
              register: res
              changed_when: false
              ignore_errors: true

            - name: "Debug / Imported (56-R8020-add_JHF.yml)"
              debug: msg="{{ res.stdout_lines }}"
              when: loglevel>=2
          when: res_exist.stdout|int == 0
      tags: import


# pre-check (for example: BGPâ€¦)

    - name: "Install"
      block:

        - name: "disable smo image auto-clone feature - save config"
          shell: |
            gclish -c "set smo image auto-clone state off"
            gclish -c "save config"
          changed_when: false
          register: res

        - name: "Debug / smo image autoclone (56-R8020-add_JHF.yml)"
          debug: msg="{{ res.stdout_lines }}"
          when: loglevel>=2

        - name: "verify package"
          shell: da_cli verify package="{{ jhf }}" | jq '."Action ID"'
          changed_when: false
          register: res
          retries: 60
          delay: 1
          until: res.stdout[1:-1]|int > 0
          # Action ID = -1 if import hasn't be finilized yet

        - name: "set Action ID"
          set_fact:
            action_id: "{{ res.stdout[1:-1] }}"
            res_verify: ""

        - name: "Debug / Action ID for Verify"
          debug: msg="Action ID = {{ action_id }}"
          when: loglevel>=3

        - name: "Verify package progress"
          include_tasks: ./include/da_progress.yml
          vars:
            delay: 1
            max_retries: 50
            id: "{{ action_id }}"
          register: res

        - name: "Debug / verify package completed (56-R8020-add_JHF.yml)"
          debug:
            msg:
              - "{{ res_verify.stdout }}"


        # - name: "verify package progress"
        #   shell: da_cli get_status_of_action actionID="{{ action_id }}" | jq '.Progress + "% " + .Status'
        #   changed_when: false
        #   register: res
        #   until: res is search("success")
        #   retries: 60
        #   delay: 1
        #   # until "Progress" : "100", "Status" : "success"

        - name: "Install package"
          shell: da_cli install package="{{ jhf }}" | jq '."Action ID"'
          changed_when: false
          register: res

        - name: "set Action ID"
          set_fact:
            action_id: "{{ res.stdout[1:-1] }}"
            res_verify: ""

        - name: "Debug / Action ID for Install (56-R8020-add_JHF.yml)"
          debug:
            msg:
              - "Expect retries until completed and reboot."
              - "Progress can be tracked in other terminal with"
              - "da_cli get_status_of_action actionID={{ action_id }}"
          when: loglevel>=2

        - name: "Install package progress"
          include_tasks: ./include/da_progress.yml
          vars:
            delay: 60
            max_retries: 100
            id: "{{ action_id }}"
          register: res
          ignore_errors: true

        - name: "Debug / Going to reboot (56-R8020-add_JHF.yml)"
          debug: msg="{{ res_verify }}"
          ignore_errors: true
          when: loglevel>=1
      tags: install

    - name: "Timestamp / JHF installed, waiting for SMO reboot"
      include_tasks: include/print_datetime.yml
      when: loglevel>=2

    - name: "Wait for reboot completed (handle SMO switches)"
      include_tasks: include/reconnect_wait_active.yml
      loop: "{{ range(1, 4, 1) | list }}"

### Validate state
    - name: "Validate SGM state if OK to move forward"
      include_tasks: include/validate_state.yml

    - name: "Timestamp / Step 56 (JHF R80.20SP install to SMO) completed"
      include_tasks: include/print_datetime.yml
      when: loglevel>=2

        # - name: "Debug / "
        #   debug: msg="{{ res_exist.stdout }}"
        #   when: loglevel>=2

    # - name: "Temporary stop"
    #   meta: end_play
