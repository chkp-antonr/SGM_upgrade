- name: "get SMO_IP"
  shell: hostname -i
  register: res
  changed_when: false

- name: "Debug / SMO_IP (include/import_package.yml)"
  debug: msg="SMO_IP {{ res.stdout }}"

- name: "clear import_to_member"
  set_fact:
    import_to_member: ""

- name: "set import_to_member"
  set_fact:
    import_to_member: "member_ids {{ logical_member }}"
  when:
    - logical_member is defined
    - not is_first | default(false)

- name: "Create local repo dir"
  file:
    path: "{{ local_repo }}"
    state: directory
    mode: 0777

# - name: "Download package to local repo"
#   get_url:
#     url: "{{ remote_repo }}/{{ package_name }}"
#     dest: "{{ local_repo }}"
#     mode: 0644

- name: "Upload package to local repo on SMO"
  delegate_to: 127.0.0.1
  shell: |
    sshpass -p "{{ ansible_ssh_pass }}" sftp "{{ ansible_ssh_user }}@{{ groups.sg[0] }}" <<EOF
    lcd "{{ host_repo }}"
    cd "{{ local_repo }}"
    put "{{ package_name }}"
    quit
    EOF
  changed_when: false
  # Sometimes scp "lost connection" after transfer and no file on the remote
  # shell: >
  #   sshpass -p "{{ ansible_ssh_pass }}" scp "{{ host_repo }}"/"{{ package_name }}"
  #   "{{ ansible_ssh_user }}"@"{{ groups.sg[0] }}":"{{ local_repo }}"

- name: "config-lock"
  shell: gclish -c "set config-lock on override"
  changed_when: false

- name: "lock database override"
  shell: gclish -c "lock database override"
  changed_when: false

- name: "Import package"
  shell: gclish -c "installer import local {{ local_repo }}/{{ package_name }} {{ import_to_member }}"
  register: res
  changed_when: false
  ignore_errors: true

- name: "Debug / Import package (include/import_package.yml)"
  debug: msg="{{ res.stdout_lines }}"
  when: loglevel>0
