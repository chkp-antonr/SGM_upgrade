### Import package

# - name: "Debug / Prepare to import package (include/06-install_JHF.yml)"
#   debug:
#     msg:
#       - "Prepare to import package {{ jhf_R80 }}"
#       - "on {{ smo_ip }}"
#   when: loglevel>0

# - name: "Timestamp / Start importing package"
#   include_tasks: ./include/print_datetime.yml
#   when: loglevel>=2

- name: "Import package (include/06-install_JHF.yml)"
  include_tasks: include/import_package.yml
  vars:
    package_name: "{{ jhf_R80 }}"

- name: "Show imported packages"
  shell: gclish -c "show installer packages imported"
  register: res
  changed_when: false

- name: "Debug / Show imported packages (include/06-install_JHF.yml)"
  debug: msg="{{ res.stdout_lines }}"
  when: loglevel>=2

- name: "Show all packages"
  shell: gclish -c "show installer packages"
  register: res
  changed_when: false

- name: "Debug / Show all packages (include/06-install_JHF.yml)"
  debug: msg="{{ res.stdout_lines }}"
  when: loglevel>=2


# Let's switch to the proper SMO (shutdown SGM to be upgarded)

- name: "clusterXL down for the logical group"
  delegate_to: 127.0.0.1
  expect:
    command: "sshpass -p {{ ansible_ssh_pass }} ssh -t {{ ansible_ssh_user }}@{{ inventory_hostname }} g_clusterXL_admin -b {{ logical_range }} down"
    responses:
      'Are you sure': "y"
      'Enter your full name:': 'Ansible'
      'Enter reason for': "Automated Upgrade"
    timeout: 20
    echo: true
  register: res
  ignore_errors: true
  ignore_unreachable: true

- name: "Debug / clusterXL down (include/06-install_JHF.yml)"
  debug: msg="{{ res.stdout_lines }}"
  ignore_errors: true
  when: loglevel>=3

- name: Establish new connection (in case of SMO switch)
  # switch on g_clusterXL down for group A
  wait_for_connection:
    timeout: 600
  register: res
  ignore_unreachable: true
  ignore_errors: true

- name: "get SMO_IP"
  shell: hostname -i
  register: res
  changed_when: false
  ignore_unreachable: true

- name: "Store SMO_IP"
  set_fact:
    smo_ip: "{{ res.stdout }}"

- name: "Debug / SMO_IP just before JHF install (include/06-install_JHF.yml)"
  debug:
    msg: "{{ smo_ip }}"
  ignore_errors: true
  when: loglevel>1


### Find package index and verify

- name: "Get pkg_index"
  include_tasks: include/get_pkg_index.yml
  vars:
    package_file_name: "{{ jhf_R80 }}"
    # logical_member: "{{ Inherited }}"

- name: "Timestamp / After importing package"
  include_tasks: ./include/print_datetime.yml
  when: loglevel>=2

- name: "set import_to_member to verify"
  set_fact:
    import_to_member: "member_ids {{ logical_member }}"
  when:
    - logical_member is defined
    # - not is_first is defined

- name: "Verify installer (include/06-install_JHF.yml)"
  shell: gclish -c "installer verify {{ pkg_index }} {{ import_to_member }}"
  register: res_verify
  changed_when: false
  ignore_errors: true

- name: "Debug / installer verify (include/06-install_JHF.yml)"
  debug: msg="{{ res_verify }}"
  when: loglevel>=3

- name: "Timestamp / installer verified"
  include_tasks: ./include/print_datetime.yml
  when: loglevel>=3

- name: "Check if all required SGMs allowed"
  shell: echo "{{ res_verify.stdout_lines }}" | egrep -v -i "not|doesn't"
  register: res
  changed_when: false
  ignore_errors: true

- name: "Verify installer failed - break! (include/06-install_JHF.yml)"
  fail:
    msg:
      - "Oops. Already installed? Not in sync? Break installation."
      - "{{ res_verify.stdout_lines }}"
  when: res.rc == 1
  # ! Need better error handling ?

- name: "Debug / Verify installer - OK (include/06-install_JHF.yml)"
  debug:
    msg: "{{ res_verify.stdout_lines }}"
  when: res.rc == 0


### Start installation

- name: "Get pkg_index"
  include_tasks: include/get_pkg_index.yml
  vars:
    package_file_name: "{{ jhf_R80 }}"
    # logical_member: "{{ Inherited }}"

# - name: "Install JHF by switching to the affected member"
#   # ! 1 to replace with the calculated number of the package
#   delegate_to: 127.0.0.1
#   expect:
#     command: "sshpass -p {{ ansible_ssh_pass }} ssh -t {{ ansible_ssh_user }}@{{ inventory_hostname }} member {{ logical_member }}"
#     responses:
#       '\:0]#': "gclish -c \"installer install {{ pkg_index }} {{ import_to_member }}\""
#       'Do you want to continue': "y"
#       'Are you sure': "y"
#       'You are about to perform': "y"
#       'Enter your full name:': 'Ansible'
#       'Enter reason for': "Automated Upgrade"
#     timeout: 60
#     echo: true
#   register: res
#   ignore_errors: true
#   ignore_unreachable: true


# # ! Check for "Package index doesn't exist on the local member ('1')"

# - name: "Debug / JHF install in progress (include/06-install_JHF.yml)"
#   debug:
#     msg:
#       - "JHF install in progress on {{ logical_range }} from {{ smo_ip }}"
#   ignore_errors: true
#   when: loglevel>0

# - name: "Returned from install, start waiting for reboot"
#   include_tasks: ./include/print_datetime.yml
#   when: loglevel>=2


#   # upgrade of the logicalA (with SMO) causes disconnect.
#   # maybe two disconnects (SMO switches to B and then back)

#   # wait for asg stat -i sgm_info all ACTIVE (Inactive disappeared) or disconnected
#   # watch -n 5 "asg stat -i proc | grep -A 5 'SGM ID'"
#   # Maybe count `asg stat -i active_ids`
#   # ! Add timeout to the loop !

# - name: "Establish new connection (in case of SMO switch)"
#   wait_for_connection:
#     timeout: 600
#   register: res
#   ignore_unreachable: true
#   ignore_errors: true

# - name: "get SMO_IP"
#   shell: hostname -i
#   register: res
#   changed_when: false
#   ignore_unreachable: true
#   ignore_errors: true

# - name: "Debug / SMO_IP before waiting for all active (include/06-install_JHF.yml)"
#   debug:
#     msg: "{{ res.stdout }}"
#   ignore_errors: true
#   when: loglevel>0

# - name: "Wait for all Active"
#   shell: while [ $(asg stat -i sgm_info | grep -c Inactive) -ne 0 ]; do printf "."; sleep 10; done
#   changed_when: false
#   ignore_errors: true
#   ignore_unreachable: true
#   register: res
#   # ! Normal return or disconnect first?

# - name: "Debug / Return from waiting reboot (include/06-install_JHF.yml)"
#   debug:
#     msg:
#       - "Rebooted and all active, range {{ logical_range }}"
#       - "{{ res }}"
#   ignore_errors: true
#   when: loglevel>1

# - name: Establish new connection (in case of SMO switch)
#   wait_for_connection:
#     timeout: 600
#   register: res
#   ignore_unreachable: true
#   ignore_errors: true

# - name: "get SMO_IP"
#   shell: hostname -i
#   register: res
#   changed_when: false
#   ignore_unreachable: true
#   ignore_errors: true

# - name: "Debug / SMO_IP after all active (include/06-install_JHF.yml)"
#   debug:
#     msg: "{{ res }}"
#   when: loglevel>1
#   ignore_errors: true

# - name: "Reboot completed"
#   include_tasks: ./include/print_datetime.yml
#   when: loglevel>=2
