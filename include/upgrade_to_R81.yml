- name: "get SMO_IP / include/upgrade_to_R81.yml"
  shell: hostname -i
  register: res
  changed_when: false

- name: "Store SMO_IP"
  set_fact:
    smo_ip: "{{ res.stdout }}"

- name: "Debug / SMO_IP"
  debug: msg="{{ smo_ip }}"
  when: loglevel>=3

# Let's switch to the proper SMO first

  # "Attention! In case image auto-clone is enabled, this operation may be overridden by auto-cloning from SMO during next boot."
  # "To disable image auto-clone run: set smo image auto-clone state off",
  # ! get `show smo image auto-clone state`

- name: "clusterXL down for the logical group"
  delegate_to: 127.0.0.1
  expect:
    command: "ssh -t ansible@{{ inventory_hostname }} g_clusterXL_admin -b {{ logical_range }} down"
    responses:
      'password': "{{ ansible_ssh_pass }}"
      'Are you sure': "y"
      'Enter your full name:': "Ansible"
      'Enter reason for': "Automated Upgrade"
    timeout: 60
    echo: true
  register: res
  ignore_errors: true
  ignore_unreachable: true

- name: "Debug / clusterXL down"
  debug: msg="{{ res.stdout_lines }}"
  ignore_errors: true
  when: loglevel>=3

- name: Establish new connection (as SMO switches to B)
  # switch on g_clusterXL down for group A
  wait_for_connection:
    timeout: 600
  register: res
  ignore_unreachable: true
  ignore_errors: true

- name: "get SMO_IP"
  shell: hostname -i
  register: res
  changed_when: false
  ignore_unreachable: true

- name: "Store SMO_IP"
  set_fact:
    smo_ip: "{{ res.stdout }}"

- name: "Debug / SMO_IP just before upgrade"
  debug:
    msg: "{{ smo_ip }}"
  ignore_errors: true
  when: loglevel>1


### Find package index and upgrade

- name: "Get pkg_index"
  include_tasks: include/get_pkg_index.yml
  vars:
    package_file_name: "{{ pkg_upgrade_R81 }}"
    # logical_member: "{{ Inherited from [09|14]-upgrade_R81-[A|B] }}"

- name: "No package to install - break!"
  fail:
    msg:
      - "Oops. No package to install on {{ logical_member }}!"
      - "{{ pkg_upgrade_R81 }} missed"
  when: pkg_index | int == 0
  # ! Need better eror handling

- name: "Upgrade to R81"
  # ! 1 to replace with the calculated number of the package
  delegate_to: 127.0.0.1
  expect:
    command: 'ssh -t ansible@{{ inventory_hostname }} member {{ logical_member }}'
    responses:
      'password': "{{ ansible_ssh_pass }}"
      '\:0]#': "gclish -c \"installer upgrade {{ pkg_index }} member_ids {{ logical_range }}\""
      'Do you want to continue': "y"
      'Are you sure': "y"
      'You are about to perform': "y"
      'Enter your full name:': 'Ansible'
      'Enter reason for': "Automated Upgrade"
    timeout: 60
    echo: true
  register: res
  ignore_errors: true
  ignore_unreachable: true

- name: "Debug / Upgrade to R81"
  debug: msg="{{ res.stdout_lines }}"
  when: loglevel>=2

- name: "Debug / Upgrade to R81 in progress"
  debug:
    msg:
      - "Upgrade to R81 in progress on {{ logical_range }} from {{ smo_ip }}"
  ignore_errors: true
  when: loglevel>0

- name: "Returned from install, start waiting for reboot"
  include_tasks: ./include/print_datetime.yml
  when: loglevel>=2

### DOWN is OK. Need to ensure we are ready for sp_upgrade

- name: "Wait for FSYNC, during_upgrade"
  include_tasks: ./include/wait_for_during_upgrade.yml
  loop:
    - "First"
    - "Second"
    - "Third"

- name: "debug"
  block:
    - name: "get SMO_IP"
      shell: hostname -i
      register: res_smo_ip
      changed_when: false

    - name: "cphaprob stat"
      shell: g_all cphaprob stat
      register: res
      changed_when: false

    - name: "Debug / cphaprob stat after upgrading"
      debug:
        msg:
          - "{{ res.stdout_lines }}"
          - "Upgraded {{ logical_member }}. SMO is {{ res_smo_ip.stdout_lines }}"
  when: loglevel>=3

- name: "Ready for sp_upgrade"
  include_tasks: ./include/print_datetime.yml
  when: loglevel>=2
